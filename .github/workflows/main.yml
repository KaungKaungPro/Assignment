name: CICD

on:
  push:
    branches:
      - 'release/v[0-9]+.[0-9]+'

jobs:
  build_and_scan:
    runs-on: ubuntu-latest
    outputs:
      scan_success: ${{ steps.vulnerability_scan.outcome == 'success' }}

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Scan for Vulnerabilities
        id: vulnerability_scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          severity: 'CRITICAL'
        continue-on-error: true

      - name: Set up QEMU
        if: steps.vulnerability_scan.outcome == 'success'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.vulnerability_scan.outcome == 'success'
        uses: docker/setup-buildx-action@v3
    
      - name: Login to Docker Hub
        if: steps.vulnerability_scan.outcome == 'success'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
      - name: Build and push
        if: steps.vulnerability_scan.outcome == 'success'
        id: build_and_push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: kaungkaungpro/cicd_docker:${{ github.sha }}

      - name: Install cosign
        if: steps.vulnerability_scan.outcome == 'success'
        uses: sigstore/cosign-installer@v2.2.0
        with:
          cosign-release: 'v2.2.4'

      - name: Sign image with a key
        if: steps.vulnerability_scan.outcome == 'success'
        run: cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${{ env.TAGS }}@${{ env.DIGEST }}"
        env:
          TAGS: kaungkaungpro/cicd_docker:${{ github.sha }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build_and_push.outputs.digest }}

      - name: Notify on Build Success
        if: steps.vulnerability_scan.outcome == 'success'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: "Image build and signed"
          SLACK_MESSAGE: |
            Name: Kyaw Lin Thu
            Matriculation: A0290864U
            Email: e1327895@u.nus.edu
            GitHub: https://github.com/KaungKaungPro/Assignment.git
            Docker: https://hub.docker.com/repository/docker/kaungkaungpro/cicd_docker/general
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify on Build Failure
        if: steps.vulnerability_scan.outcome == 'failure'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#FF0000'
          SLACK_TITLE: "Scan failed - Kyaw Lin Thu"
          SLACK_MESSAGE: "Failed trivy scan, see uploaded report"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Upload Scan Report
        if: steps.vulnerability_scan.outcome == 'failure'
        uses: MeilCli/slack-upload-file@v3
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: 'trivy-results.txt'
          initial_comment: 'Scan report by Kyaw Lin Thu'
