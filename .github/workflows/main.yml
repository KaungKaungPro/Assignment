# Name of the workflow
name: CICD

# Trigger the workflow on push events to branches that match the 'release/v[MAJOR].[MINOR]' pattern
on:
  push:
    branches:
      - 'release/v[0-9]+.[0-9]+'

# Define jobs in the workflow
jobs:
  # Job for successful build scenarios
  success_build:
    # Condition to check if the build should proceed
    if: ${{ vars.SUCCESS == 'true' && startsWith(github.event.head_commit.message, '#NORUN') == false }}
    # Specifies the runner environment as the latest Ubuntu
    runs-on: ubuntu-latest
    steps:
    - name: Check out the code
      uses: actions/checkout@v3  # Action to check out a repository under $GITHUB_WORKSPACE

    - name: Scan for Vulnerabilities
      uses: aquasecurity/trivy-action@master  # Uses Trivy to scan the repository file system for vulnerabilities
      with:
        scan-type: 'fs'
        severity: 'CRITICAL'

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3  # Sets up QEMU to provide an emulation environment

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3  # Sets up Docker Buildx for multi-architecture container builds

    - name: Login to Docker Hub
      uses: docker/login-action@v3  # Log in to Docker Hub to enable pushing images
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v5  # Builds the Docker image and pushes it to Docker Hub
      with:
        push: true
        tags: kaungkaungpro/cicd_docker:${{ github.sha }}

    - name: Install cosign
      uses: sigstore/cosign-installer@2.2.0  # Installs Cosign for container signing
      with:
        cosign-release: 'v2.2.4'

    - name: Sign image with a key
      run: cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"  # Signs the Docker image using Cosign
      env:
        TAGS: kaungkaungpro/cicd_docker:${{ github.sha }}
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}

    - name: Send GitHub Action trigger data to Slack workflow
      uses: rtCamp/action-slack-notify@v2  # Sends a notification to Slack
      env:
        SLACK_TITLE: "Image build and signed"
        SLACK_MESSAGE: |
          Name: Kyaw Lin Thu
          Matriculation: A0290864U
          Email: e1327895@u.nus.edu
          GitHub: https://github.com/KaungKaungPro/Assignment.git
          Docker: https://hub.docker.com/repository/docker/kaungkaungpro/cicd_docker/general
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

  # Job for failed build scenarios
  fail_build:
    # Condition to check if the build has failed
    if: ${{ vars.SUCCESS == 'false' && startsWith(github.event.head_commit.message, '#NORUN') == false }}
    runs-on: ubuntu-latest
    steps:
    - name: Check out the code
      uses: actions/checkout@v3  # Action to check out a repository under $GITHUB_WORKSPACE

    - name: Scan for Vulnerabilities
      uses: aquasecurity/trivy-action@master  # Uses Trivy to scan the repository file system for vulnerabilities
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'table'
        output: 'trivy-results.txt'
        severity: 'HIGH'

    - name: Send GitHub Action trigger data to Slack workflow
      uses: rtCamp/action-slack-notify@v2  # Sends a notification to Slack indicating failure
      env:
        SLACK_COLOR: '#FF0000'
        SLACK_TITLE: "Scan failed - Kyaw Lin Thu"
        SLACK_MESSAGE: |
          Failed trivy scan, see uploaded report
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

    - uses: MeilCli/slack-upload-file@v3  # Uploads a file to Slack
      with:
        slack_token: ${{ secrets.SLACK_TOKEN }}
        channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
        file_path: 'trivy-results.txt'
        initial_comment: 'Scan report by Kyaw Lin Thu'
